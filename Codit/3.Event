1. 이벤트 핸들러 등록하기
-HTML의 속성이나 DOM 프로퍼티를 활용해 이벤트를 등록하는 방법 외에 
-Element.addEventListner('type', 'handler')를 통해 이벤트 핸들러를 등록 가능

2. 이벤트 핸들러 삭제하기
-addEventListner 메소드를 활용해서 이벤트 핸들러를 등록했다면,
-Element.removeEventListner('type', 'handler')를 통해 이벤트 핸들러 삭제 가능

3. 이벤트 객체
-이벤트가 발생하면 이벤트 핸들러의 첫번째 파라미터에는 자동으로 이벤트 객체가 전달됨
-이벤트 객체는 이벤트 종류마다 가지고 있는 프로퍼티가 다르며, 이벤트에 대한 유용한 정보들을 프로퍼티로 가지고 있다

4. 이벤트 버블링
-이벤트는 전파가 된다
-어떤 요소에서 이벤트가 발생하면 해당 요소에 등록된 이벤트 핸들러가 동작하는 것뿐만 아니라
-부모 요소로 이벤트가 계속해서 전파되면서 각 요소에도 등록된 이벤트 핸들러가 있다면 차례로 동작한다
-자식 요소에서 부모 요소로 이벤트가 전파되는 것을 이벤트 버블링이라 칭함
-이벤트 버블링은 이벤트 객체의 stopPropagation 메소드를 전파를 막을 수 있다.

5. 이벤트 위임(Event Delegation)
-버블링 개념을 활용하면 효과적으로 이벤트 관리 가능
-각각 이벤트 핸들러 등록이 필요 없이 부모 요소에서 한번에 자식요소들에 발생하나 이벤트 관리 가능

6.브라우저의 기본 동작
-동작들을 막고 싶다면 이벤트 객체의 preventDefault 메소드를 통해 막기 가능
** 꼭 필요한 경우에만 주의해서 사용 **
